<#@ template language="C#" #>
<#@ assembly name="System.Core" #>
<#@ import namespace="System.Linq" #>
<#@ import namespace="System.Text" #>
<#@ import namespace="System.Collections.Generic" #>
<#@ import namespace="Newbe.Mahua.MarkdownGenerator" #>
<#@ parameter name="table" type="Newbe.Mahua.MarkdownGenerator.MahuaApiSupportedTable"#>

<#=GetHeader(table.PlatformNames)#>
<#=GetColumnSpliter(table.PlatformNames.Length + 2)#>
<#
    foreach (var state in table.SupportState)
    {
#><#=GetRow(state.Key,state.Value)#>
<#
    }

#>

<#+
public string GetHeader(string[] platforms){
	var sb = new StringBuilder();
	sb.Append("Api|");
	sb.Append("说明|");
    foreach (var item in platforms)
    {
		 sb.Append(item + "|");
    }
	return sb.ToString().TrimEnd('|');
}

public string GetColumnSpliter(int cols){
var sb = new StringBuilder();
    for (int i = 0; i < cols; i++)
    {
			 sb.Append("---|");
    }
	return sb.ToString().TrimEnd('|');
}
public string GetRow(MahuaApiDescription desc,IDictionary<string, SupportStatus> supportStatus){
	var sb = new StringBuilder();
	sb.AppendFormat("{0}|",desc.Name);
	sb.AppendFormat("{0}|",desc.Description);
    foreach (var name in table.PlatformNames)
    {
		var status = supportStatus[name] ;
		if(status.IsSupport){
			sb.Append("√");
            if (!status.IsOfficial)
            {
			sb.Append("(c)");
		 
            }
        }else
        {
		sb.Append(" ");
        }
		sb.Append("|");
    }
	return sb.ToString().TrimEnd('|');
}
#>