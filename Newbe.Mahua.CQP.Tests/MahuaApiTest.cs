using System;
using System.Linq;
using FluentAssertions;
using Xunit;
using Xunit.Abstractions;

namespace Newbe.Mahua.CQP.Tests
{
    public class MahuaApiTest
    {
        private readonly ITestOutputHelper _testOutputHelper;

        public MahuaApiTest(ITestOutputHelper testOutputHelper)
        {
            _testOutputHelper = testOutputHelper;
        }

        [Fact]
        public void GroupMemberInfos()
        {
            IGroupMemberInfoSerializer groupMemberInfoSerializer = new GroupMemberInfoSerializer();
            var groupMembers =
                @"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";
            var infos = groupMemberInfoSerializer.DeserializeGroupMemberInfos(groupMembers).ToList();
            infos.Any().Should().BeTrue();
            foreach (var groupMemberInfo in infos)
            {
                _testOutputHelper.WriteLine(groupMemberInfo.NickName);
            }
        }

        [Fact(DisplayName = "多次序列化确认内容是或否泄露")]
        public void GroupMemberInfos100()
        {
            for (int i = 0; i < 100; i++)
            {
                GroupMemberInfos();
            }
        }

        [Fact]
        public void GroupInfos()
        {
            IGroupInfoSerializer serializer = new GroupInfoSerializer();
            var deserializeGroupInfos = serializer.DeserializeGroupInfos("AAAAAQAVAAAAACRh36QAC05ld2JlLk1haHVh");
            var groupInfo = deserializeGroupInfos.Single();
            groupInfo.Group.Should().Be("610394020");
            groupInfo.Name.Should().Be("Newbe.Mahua");
        }
    }
}